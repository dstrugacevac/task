<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.7</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>ingemark.assignment</groupId>
	<artifactId>task</artifactId>

	<version>0.0.1-SNAPSHOT</version>
	<name>task</name>
	<description>Assignment Task - Strugacevac David</description>

	<properties>
		<java.version>17</java.version>

		<!-- Spring -->
		<version.spring-modulith-bom>0.6.0</version.spring-modulith-bom>
		<version.jmolecules-bom>2022.3.0</version.jmolecules-bom>

		<!-- DB -->
		<version.jooq>3.18.4</version.jooq>
		<version.jaskson>1.9.13</version.jaskson>

		<!-- Plugins -->
		<version.maven-compiler-plugin>3.10.0</version.maven-compiler-plugin>
		<version.checkstyle-maven-plugin>3.2.2</version.checkstyle-maven-plugin>
		<yaml-properties-maven-plugin>1.1.3</yaml-properties-maven-plugin>

		<!-- 3PP -->
		<version.mapstruct>1.5.3.Final</version.mapstruct>
		<version.lombok-mapstruct-binding>0.2.0</version.lombok-mapstruct-binding>
		<version.springdoc-openapi-starter-webmvc-ui>2.1.0</version.springdoc-openapi-starter-webmvc-ui>

		<!-- Test -->
		<version.testcontainers-bom>1.18.1</version.testcontainers-bom>
		<version.rider-core>1.37.1</version.rider-core>

	</properties>

	<repositories>
		<repository>
			<id>local-dependencies</id>
			<url>file://${project.basedir}/dependencies</url>
		</repository>
		<!-->To build the module with the added dependency, you'll require a separate repository.
        The "basedir" parameter points to the current repository location.<-->
		<repository>
			<id>local-dependencies-modules</id>
			<url>file://${project.basedir}/../dependencies</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-modulith-core</artifactId>
			<version>0.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<!-- 3PP -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${version.mapstruct}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${version.mapstruct}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${version.springdoc-openapi-starter-webmvc-ui}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- DB -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-modulith-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>localstack</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-modulith-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.database-rider</groupId>
			<artifactId>rider-spring</artifactId>
			<version>${version.rider-core}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-modulith-bom</artifactId>
				<version>${version.spring-modulith-bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${version.testcontainers-bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.maven-compiler-plugin}</version>
				<configuration>
					<source>17</source>
					<target>17</target>
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<!-- This is needed when using Lombok 1.18.16 and above -->
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${version.lombok-mapstruct-binding}</version>
						</path>
						<!-- Mapstruct should follow the lombok path(s) -->
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${version.mapstruct}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-Amapstruct.defaultComponentModel=spring</arg>
						<arg>-Amapstruct.defaultInjectionStrategy=constructor</arg>
					</compilerArgs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>it.ozimov</groupId>
				<artifactId>yaml-properties-maven-plugin</artifactId>
				<version>${yaml-properties-maven-plugin}</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>src/main/resources/application-${profile}.yml</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>9.20.0</version>

				<!-- Note that we're executing the Flyway plugin in the "generate-sources" phase -->
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>migrate</goal>
						</goals>
					</execution>
				</executions>

				<!-- Note that we need to prefix the db/migration path with filesystem: to prevent Flyway
             from looking for our migration scripts only on the classpath -->
				<configuration>
					<driver>${spring.datasource.driver-class-name}</driver>
					<url>${pom.env-variables.url}</url>
					<user>${pom.env-variables.username}</user>
					<password>${pom.env-variables.password}</password>
					<schemas>
						<schema>public</schema>
					</schemas>
					<table>schema_version</table>
					<locations>
						<location>filesystem:src/main/resources/db/migration</location>
					</locations>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>

				<executions>
					<execution>
						<id>generate-postgres</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<!-- JDBC connection parameters -->
							<jdbc>
								<driver>${spring.datasource.driver-class-name}</driver>
								<url>${pom.env-variables.url}</url>
								<user>${pom.env-variables.username}</user>
								<password>${pom.env-variables.password}</password>
							</jdbc>
							<!-- Generator parameters -->
							<generator>
								<database>
									<name>org.jooq.meta.postgres.PostgresDatabase</name>
									<includes>.*</includes>
									<excludes/>
									<inputSchema>public</inputSchema>
								</database>
								<generate>
									<pojos>true</pojos>
									<pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
									<javaTimeTypes>true</javaTimeTypes>
									<fluentSetters>true</fluentSetters>
								</generate>
								<target>
									<packageName>ingemark.assignment.task.shared.common.infrastructure.db.jooq.generated
									</packageName>
									<directory>target/generated-sources/jooq</directory>
								</target>
							</generator>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
